<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mango.order.OrderMapper">

	<!-- 주영 추가 -->
	<select id="getOrderList" parameterType="PackagePager" resultMap="orderListResult">
		SELECT * FROM 
			(SELECT pd.PAYDETAILNUM, pd.MENUNUM, pd.MENUCOUNT, p.*, m.NAME, menu.NAME AS MENUNAME FROM PAYMENT_DETAIL pd
				INNER JOIN 
					(SELECT * FROM PAYMENT
					<choose>
						<when test="startDate != null and endDate != null">
							WHERE PAYDATE BETWEEN #{startDate} AND #{endDate}
						</when>
					</choose>
					LIMIT #{startRow}, #{perPage}) p 
				ON (pd.PAYNUM = p.PAYNUM)
				LEFT JOIN MENU menu
				ON (pd.MENUNUM = menu.MENUNUM)
				LEFT JOIN MEMBER m 
				ON (p.ID = m.ID)
			WHERE p.RESTAURANTNUM = #{restaurantNum}) R
			<!-- WHERE pd.MENUNUM IN (SELECT MENUNUM FROM MENU WHERE RESTAURANTNUM = #{restaurantNum})) R -->
		ORDER BY STATUS ASC, PAYDATE ASC
	</select>
	
	<select id="getOrderDetail" parameterType="PaymentVO" resultMap="orderListResult">
		SELECT pd.PAYDETAILNUM, pd.MENUNUM, pd.MENUCOUNT, p.*, m.NAME, m.PHONE, menu.NAME AS MENUNAME, menu.PRICE FROM PAYMENT_DETAIL pd 
			INNER JOIN PAYMENT p 
			ON (pd.PAYNUM = p.PAYNUM)
			LEFT JOIN MENU menu
			ON (pd.MENUNUM = menu.MENUNUM)
			LEFT JOIN MEMBER m 
			ON (p.ID = m.ID)
		WHERE pd.PAYNUM = #{payNum}
	</select>
	
	<resultMap type="PaymentVO" id="orderListResult">
		<id column="payNum" property="payNum"/>
		<result column="id" property="id"/>
		<result column="payCheck" property="payCheck"/>
		<result column="totalPrice" property="totalPrice"/>
		<result column="payDate" property="payDate"/>
		<result column="waiting" property="waiting"/>
		<result column="status" property="status"/>
		<result column="payType" property="payType"/>
		<association property="memberVO" javaType="MemberVO">
			<id column="id" property="id"/>
			<result column="name" property="name"/>
			<result column="phone" property="phone"/>
		</association>
		<collection property="paymentDetailVOs" javaType="List" ofType="PaymentDetailVO">
			<id column="payDetailNum" property="payDetailNum"/>
			<result column="payNum" property="payNum"/>
			<result column="menuNum" property="menuNum"/>
			<result column="menuCount" property="menuCount"/>
			<association property="menuVO" javaType="MenuVO">
				<id column="menuNum" property="menuNum"/>
				<result column="menuName" property="name"/>
				<result column="price" property="price"/>
			</association>
		</collection>
	</resultMap>
	
	<select id="getOrderListCount" parameterType="PackagePager" resultType="Long">
		SELECT COUNT(PAYNUM) FROM 
			(SELECT DISTINCT p.PAYNUM FROM PAYMENT_DETAIL pd
				INNER JOIN 
					(SELECT * FROM PAYMENT
					<choose>
						<when test="startDate != null and endDate != null">
							WHERE PAYDATE BETWEEN #{startDate} AND #{endDate}
						</when>
					</choose>) p 
				ON (pd.PAYNUM = p.PAYNUM)
				LEFT JOIN MENU menu
				ON (pd.MENUNUM = menu.MENUNUM)
				LEFT JOIN MEMBER m 
				ON (p.ID = m.ID)
			WHERE p.RESTAURANTNUM = #{restaurantNum}) R
	</select>	
	
	<update id="setWaitingUpdate" parameterType="PaymentVO">
		UPDATE PAYMENT SET WAITING = #{waiting} WHERE PAYNUM = #{payNum}
	</update>
	
	<update id="setVisitUpdate" parameterType="PaymentVO">
		UPDATE PAYMENT SET STATUS = #{status} WHERE PAYNUM = #{payNum}
	</update>

</mapper>